// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.3
// source: proto/gasfee.proto

package gasfee

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TokenGasPriceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConsumerToken string                 `protobuf:"bytes,1,opt,name=consumer_token,json=consumerToken,proto3" json:"consumer_token,omitempty"`
	ChainId       uint64                 `protobuf:"varint,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Symbol        string                 `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TokenGasPriceRequest) Reset() {
	*x = TokenGasPriceRequest{}
	mi := &file_proto_gasfee_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenGasPriceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenGasPriceRequest) ProtoMessage() {}

func (x *TokenGasPriceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gasfee_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenGasPriceRequest.ProtoReflect.Descriptor instead.
func (*TokenGasPriceRequest) Descriptor() ([]byte, []int) {
	return file_proto_gasfee_proto_rawDescGZIP(), []int{0}
}

func (x *TokenGasPriceRequest) GetConsumerToken() string {
	if x != nil {
		return x.ConsumerToken
	}
	return ""
}

func (x *TokenGasPriceRequest) GetChainId() uint64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *TokenGasPriceRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type TokenGasPriceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReturnCode    uint64                 `protobuf:"varint,1,opt,name=return_code,json=returnCode,proto3" json:"return_code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	MarketPrice   string                 `protobuf:"bytes,3,opt,name=market_price,json=marketPrice,proto3" json:"market_price,omitempty"`
	Symbol        string                 `protobuf:"bytes,4,opt,name=symbol,proto3" json:"symbol,omitempty"`
	PredictFee    string                 `protobuf:"bytes,5,opt,name=predict_fee,json=predictFee,proto3" json:"predict_fee,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TokenGasPriceResponse) Reset() {
	*x = TokenGasPriceResponse{}
	mi := &file_proto_gasfee_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenGasPriceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenGasPriceResponse) ProtoMessage() {}

func (x *TokenGasPriceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gasfee_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenGasPriceResponse.ProtoReflect.Descriptor instead.
func (*TokenGasPriceResponse) Descriptor() ([]byte, []int) {
	return file_proto_gasfee_proto_rawDescGZIP(), []int{1}
}

func (x *TokenGasPriceResponse) GetReturnCode() uint64 {
	if x != nil {
		return x.ReturnCode
	}
	return 0
}

func (x *TokenGasPriceResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TokenGasPriceResponse) GetMarketPrice() string {
	if x != nil {
		return x.MarketPrice
	}
	return ""
}

func (x *TokenGasPriceResponse) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *TokenGasPriceResponse) GetPredictFee() string {
	if x != nil {
		return x.PredictFee
	}
	return ""
}

var File_proto_gasfee_proto protoreflect.FileDescriptor

const file_proto_gasfee_proto_rawDesc = "" +
	"\n" +
	"\x12proto/gasfee.proto\x12\x0ecpchain.gasfee\"p\n" +
	"\x14TokenGasPriceRequest\x12%\n" +
	"\x0econsumer_token\x18\x01 \x01(\tR\rconsumerToken\x12\x19\n" +
	"\bchain_id\x18\x02 \x01(\x04R\achainId\x12\x16\n" +
	"\x06symbol\x18\x03 \x01(\tR\x06symbol\"\xae\x01\n" +
	"\x15TokenGasPriceResponse\x12\x1f\n" +
	"\vreturn_code\x18\x01 \x01(\x04R\n" +
	"returnCode\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12!\n" +
	"\fmarket_price\x18\x03 \x01(\tR\vmarketPrice\x12\x16\n" +
	"\x06symbol\x18\x04 \x01(\tR\x06symbol\x12\x1f\n" +
	"\vpredict_fee\x18\x05 \x01(\tR\n" +
	"predictFee2\x86\x01\n" +
	"\x15TokenGasPriceServices\x12m\n" +
	"\x1cgetTokenPriceAndGasByChainId\x12$.cpchain.gasfee.TokenGasPriceRequest\x1a%.cpchain.gasfee.TokenGasPriceResponse\"\x00B$\n" +
	"\x12com.cpchain.gasfeeZ\x0e./proto/gasfeeb\x06proto3"

var (
	file_proto_gasfee_proto_rawDescOnce sync.Once
	file_proto_gasfee_proto_rawDescData []byte
)

func file_proto_gasfee_proto_rawDescGZIP() []byte {
	file_proto_gasfee_proto_rawDescOnce.Do(func() {
		file_proto_gasfee_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_gasfee_proto_rawDesc), len(file_proto_gasfee_proto_rawDesc)))
	})
	return file_proto_gasfee_proto_rawDescData
}

var file_proto_gasfee_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_proto_gasfee_proto_goTypes = []any{
	(*TokenGasPriceRequest)(nil),  // 0: cpchain.gasfee.TokenGasPriceRequest
	(*TokenGasPriceResponse)(nil), // 1: cpchain.gasfee.TokenGasPriceResponse
}
var file_proto_gasfee_proto_depIdxs = []int32{
	0, // 0: cpchain.gasfee.TokenGasPriceServices.getTokenPriceAndGasByChainId:input_type -> cpchain.gasfee.TokenGasPriceRequest
	1, // 1: cpchain.gasfee.TokenGasPriceServices.getTokenPriceAndGasByChainId:output_type -> cpchain.gasfee.TokenGasPriceResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_gasfee_proto_init() }
func file_proto_gasfee_proto_init() {
	if File_proto_gasfee_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_gasfee_proto_rawDesc), len(file_proto_gasfee_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_gasfee_proto_goTypes,
		DependencyIndexes: file_proto_gasfee_proto_depIdxs,
		MessageInfos:      file_proto_gasfee_proto_msgTypes,
	}.Build()
	File_proto_gasfee_proto = out.File
	file_proto_gasfee_proto_goTypes = nil
	file_proto_gasfee_proto_depIdxs = nil
}
